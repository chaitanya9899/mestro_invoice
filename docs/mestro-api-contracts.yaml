swagger: "2.0"
info:
  version: 1.0.0
  title: Mestro Web Crawler APIs
  description: The specification defines APIs available for third party to start various crawler for the end user and get the data.
  contact:
    name: Dheeraj Gujral
    email: dheeraj.gujral@tarento.com

schemes:
  - https
basePath: '/crawler'
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []

paths:
  /agent/v0/list:
    get:
      summary: Retrieves the list of available agents 
      tags:
      - Agent
      security:
        - basicAuth: []
      responses:
        200:
          description: On successful completion of the job.
          schema:
            $ref: '#/definitions/AgentListSuccessResponse'
        400:
          description: On errors causing a failure in the job.
          schema:
            $ref: '#/definitions/HttpOutputError'
        401:
          $ref: '#/responses/ERROR_UNAUTHORIZED'
            
  /agent/v0/run:
    post:
      summary: triggers the crawling job for a user
      tags:
      - Agent
      parameters:
        - name: AgentRunRequest
          in: body
          required: true
          description: Request format accepted by this API.
          schema:
            $ref: '#/definitions/AgentRunRequest'
      security:
        - basicAuth: []
      responses:
        200:
          description: On successful initiation of the job.
          schema:
            $ref: '#/definitions/AgentRunSuccessResponse'
        400:
          description: On errors causing a failure in the job.
          schema:
            $ref: '#/definitions/HttpOutputError'
        401:
          $ref: '#/responses/ERROR_UNAUTHORIZED'
            
  /job/v0/status:
    get:
      summary: returns the job status
      tags:
      - Agent
      parameters:
      - name: jobId
        in: query
        required: true
        description: Id of the initiated job
        type: string
      security:
        - basicAuth: []
      responses:
        200:
          description: On successful completion of the job.
          schema:
            $ref: '#/definitions/AgentRunStatusResponse'
        400:
          description: On errors causing a failure in the job.
          schema:
            $ref: '#/definitions/HttpOutputError'
        401:
          $ref: '#/responses/ERROR_UNAUTHORIZED'

definitions:

  AgentRunStatusRequest:
    type: object
    description: check the status of a jobId
    properties:
      jobId:
        type: string
        description: provided jobId when run request is scheduled.
    required:
      - jobId
        
  AgentRunStatusResponse:
    type: object
    description: returns the status of a jobId
    properties:
      data:
        type: object
        properties:
          message:
            type: string
          status:
            type: string
            example: "RUNNING or COMPLETED_FAILED or COMPLETED_SUCCESS"
        description: status of the job along with human readable message for additional information
      http:
        type: object
        properties:
          status:
            type: number
            example: 200
      ok:
        type: boolean
      why:
        type: string
        example: "request successful"
        

  AgentRunRequest:
    type: object
    description: in order to start a crawlering job for a user corresponding to a energy provider
    properties:
      agent:
        type: object
        $ref: '#/definitions/UserAgentInformation'
    required:
      - agent
        
  AgentRunSuccessResponse:
    type: object
    description: response returned if the job has started successfully
    properties:
      agentId:
        type: string
        description: unique identification of agentId
      jobId:
        type: string
        description: unique identification of jobId that got created. UUIDV4 format

  AgentListSuccessResponse:
    type: object
    properties:
      ok:
        type: boolean
        description: request successful indicator.
      why:
        type: string
        example: "request successful"
        description: Response message.
      http:
        type: object
        properties:
          status:
            type: number
            example: 200
        description: overall operation status
      data:
        type: array
        description: the return value should be returned under this property
        items:
          $ref: '#/definitions/Agent'
  
  UserAgentInformation:
    type: object
    properties:
      agentId:
        type: string
        description: unique identification of agent_id
      username:
        type: string
        description: username credentails of a registered user for a given energy provider
      password:
        type: string
        description: plain text password of a registered user for a given energy provider.
      isPeriodDefault:
        type: boolean
        description: if true, will scrap the website with default date setting, else custom start date to be specified 
      startDate:
        description: Start date to be specified if isPeriodDefault is false
        example: "2017-01-01"
        format: date
    required:
      - agentId
      - username
      - password
      - isPeriodDefault
      
  
  Agent:
    type: object
    properties:
      agentId:
        type: string
        description: unique identification of an agent/crawler/bot
      energyProvider:
        type: string
        description: Name of energy provider
      description:
        type: string
        description: general description of the provider
      homeURL:
        type: string
        description: URL of the agent website

  ErrorCode:
    type: object
    properties:
      code:
        type: integer
        description: status code
      message:
        type: string
        description: human understandable format
    required:
      - code
      - message

  HttpOutputError:
    type: object
    properties:
      ok:
        type: boolean
        description: request successful indicator.
      why:
        type: string
        description: Response message.
      status:
        type: object
        description: overall operation status
        $ref: '#/definitions/ErrorCode'
      data:
        type: integer
        description: should be null object
        default: null

responses:
  ERROR_MISSING_MANDATORY_PARAMETERS:
    description: Input request does not have parameters are the required.
    schema:
      $ref: '#/definitions/ErrorCode'
  ERROR_UNAUTHORIZED:
    description: request does not have relevant authority to start the process.
    schema:
      $ref: '#/definitions/ErrorCode'
  ERROR_RESOURCE_EXHAUSTED:
    description: application deprived of system resources
    schema:
      $ref: '#/definitions/ErrorCode'
  SUCCESS:
    description: all good
    schema:
      $ref: '#/definitions/ErrorCode'